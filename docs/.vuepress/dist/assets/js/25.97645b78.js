(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{533:function(t,s,a){"use strict";a.r(s);var n=a(3),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一、string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、string"}},[t._v("#")]),t._v(" 一、String")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("String类：")]),t._v(' 代表字符串。Java 程序中的所有字符串字面值（如 "abc" ）都作 为此类的实例实现。')]),t._v(" "),a("li",[t._v("String是一个final类，"),a("strong",[t._v("代表不可变的字符序列。")])]),t._v(" "),a("li",[t._v("字符串是常量，用双引号引起来表示。它们的值在创建之后不能更改。")]),t._v(" "),a("li",[t._v("String对象的字符内容是存储在一个字符数组value[]中的")])]),t._v(" "),a("h3",{attrs:{id:"_1、string的不可变性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、string的不可变性"}},[t._v("#")]),t._v(" 1、String的不可变性")]),t._v(" "),a("ol",[a("li",[t._v("当对字符串重新赋值时，需要重新指定内存区域赋值，不能使用原有的value进行赋值")]),t._v(" "),a("li",[t._v("当对现有的字符串进行连接操作时，也需要重新指定内存区域赋值，不能使用原有的value进行赋值")]),t._v(" "),a("li",[t._v("当嗲用String的replace()方法修改指定字符或字符串时，也需要重新指定内存区域赋值，不能使用原有的value进行赋值")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字面量的定义方式（不使用new）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 比较s1和s2的地址值：true")]),t._v("\n    s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    s3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"def"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// abcdef")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// abc")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过字面量方式（区别于new）给一个字符串赋值，此时的字符串值声明在字符串常量池中。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串常量池中是不会存储相同内容的字符串的")]),t._v("\n")])])]),a("img",{staticStyle:{zoom:"33%"},attrs:{src:"https://typora-img-1307960409.cos.ap-shanghai.myqcloud.com/img/image-20210420120051552.png",alt:"image-20210420120051552"}}),t._v(" "),a("h3",{attrs:{id:"_2、string对象的创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、string对象的创建"}},[t._v("#")]),t._v(" 2、String对象的创建")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字面量赋值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//本质上this.value = new char[0]; ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//this.value = original.value; ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" original"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//this.value = Arrays.copyOf(value, value.length); ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" startIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3、string对象是如何存储的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、string对象是如何存储的"}},[t._v("#")]),t._v(" 3、String对象是如何存储的")]),t._v(" "),a("img",{staticStyle:{zoom:"33%"},attrs:{src:"https://typora-img-1307960409.cos.ap-shanghai.myqcloud.com/img/image-20210420165556239.png",alt:"image-20210420165556239"}}),t._v(" "),a("p",[a("strong",[t._v("面试题："),a("code",[t._v('String s = new String("abc");')]),t._v("方式创建对象，在内存中创建了几个对象？")])]),t._v(" "),a("p",[t._v('两个：一个是堆空间中new结构，第二个是char[] 对应的常量池中的数据："abc"')]),t._v(" "),a("h3",{attrs:{id:"_4、string不同拼接操作的对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、string不同拼接操作的对比"}},[t._v("#")]),t._v(" 4、String不同拼接操作的对比")]),t._v(" "),a("img",{staticStyle:{zoom:"33%"},attrs:{src:"https://typora-img-1307960409.cos.ap-shanghai.myqcloud.com/img/image-20210420170837777.png",alt:"image-20210420170837777"}}),t._v(" "),a("p",[a("strong",[t._v("面试题：")]),t._v(" String的参数传递")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringTest")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"good"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test ok"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringTest")]),t._v(" ex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringTest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("change")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// good")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// best")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("String对象作为形参传递的是地址值，由于String的不变性，change函数内对该地址值修改时需重新创建，因此对原地址不影响。")]),t._v(" "),a("h2",{attrs:{id:"二、jvm中涉及字符串的内存结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、jvm中涉及字符串的内存结构"}},[t._v("#")]),t._v(" "),a("em",[t._v("二、JVM中涉及字符串的内存结构")])]),t._v(" "),a("p",[a("em",[a("strong",[t._v("Heap堆")])])]),t._v(" "),a("p",[a("em",[t._v("一个JVM实例只存在一个堆内存，堆内存的大小是可以调节的。类加载器读取了类文件后，需要把类、方法、常变量放到堆内存中，保存所有引用类型的真实信息，以方便执行器执行，堆内存分为三部分：")])]),t._v(" "),a("ul",[a("li",[a("em",[t._v("Young Generation Spqce 新生区 Young")])]),t._v(" "),a("li",[a("em",[t._v("Tenure Generation Space 养老区 Old")])]),t._v(" "),a("li",[a("em",[t._v("Permanent Space 永久存储区 Perm")])])]),t._v(" "),a("h2",{attrs:{id:"二、string类的常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、string类的常用方法"}},[t._v("#")]),t._v(" 二、String类的常用方法")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("int length()：")]),t._v(" 返回字符串的长度： return value.length")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("char charAt(int index)：")]),t._v("  返回某索引处的字符return value[index]")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("boolean isEmpty()：")]),t._v(" 判断是否是空字符串：return value.length == 0")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("String toLowerCase()：")]),t._v(" 使用默认语言环境，将 String 中的所有字符转换为小写")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("String toUpperCase()：")]),t._v(" 使用默认语言环境，将 String 中的所有字符转换为大写")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("String trim()：")]),t._v(" 返回字符串的副本，忽略前导空白和尾部空白")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("boolean equals(Object obj)：")]),t._v(" 比较字符串的内容是否相同")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("boolean equalsIgnoreCase(String anotherString)：")]),t._v(" 与equals方法类似，忽略大 小写")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("String concat(String str)：")]),t._v(" 将指定字符串连接到此字符串的结尾。 等价于用“+”")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("int compareTo(String anotherString)：")]),t._v(" 比较两个字符串的大小")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("String substring(int beginIndex)：")]),t._v(" 返回一个新的字符串，它是此字符串的从 beginIndex开始截取到最后的一个子字符串")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("String substring(int beginIndex, int endIndex) ：")]),t._v(" 返回一个新字符串，它是此字 符串从beginIndex开始截取到endIndex(不包含)的一个子字符串。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("boolean endsWith(String suffix)：")]),t._v(" 测试此字符串是否以指定的后缀结束")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("boolean startsWith(String prefix)：")]),t._v(" 测试此字符串是否以指定的前缀开始")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("boolean startsWith(String prefix, int toffset)：")]),t._v(" 测试此字符串从指定索引开始的 子字符串是否以指定前缀开始")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("boolean contains(CharSequence s)：")]),t._v(" 当且仅当此字符串包含指定的 char 值序列 时，返回 true")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("int indexOf(String str)：")]),t._v(" 返回指定子字符串在此字符串中第一次出现处的索引")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("int indexOf(String str, int fromIndex)：")]),t._v(" 返回指定子字符串在此字符串中第一次出 现处的索引，从指定的索引开始")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("int lastIndexOf(String str)：")]),t._v(" 返回指定子字符串在此字符串中最右边出现处的索引")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("int lastIndexOf(String str, int fromIndex)：")]),t._v(" 返回指定子字符串在此字符串中最后 一次出现处的索引，从指定的索引开始反向搜")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("注：indexOf和lastIndexOf方法如果未找到都是返回-1")])])]),t._v(" "),a("li",[a("p",[a("em",[t._v("什么情况下，"),a("code",[t._v("indexOf")]),t._v(" 和 "),a("code",[t._v("lastIndexOf")]),t._v(" 返回值相同：只有一个字符、空串")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("String replace(char oldChar, char newChar)：")]),t._v(" 返回一个新的字符串，它是通过用 "),a("code",[t._v("newChar")]),t._v(" 替换此字符串中出现的所有 "),a("code",[t._v("oldChar")]),t._v(" 得到的")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("String replace(CharSequence target, CharSequence replacement)：")]),t._v(" 使用指定的字面值替换序列替换此字符串所有匹配字面值目标序列的子字符串")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("String replaceAll(String regex, String replacement) ：")]),t._v(" 使用给定的 "),a("code",[t._v("replacement")]),t._v(" 替换此字符串所有匹配给定的正则表达式的子字符串")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("String replaceFirst(String regex, String replacement) ：")]),t._v(" 使用给定的 "),a("code",[t._v("replacement")]),t._v(" 替换此字符串匹配给定的正则表达式的第一个子字符串")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("boolean matches(String regex)：")]),t._v(" 告知此字符串是否匹配给定的正则表达式")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("String[] split(String regex)：")]),t._v(" 根据给定正则表达式的匹配拆分此字符串")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("String[] split(String regex, int limit)：")]),t._v(" 根据匹配给定的正则表达式来拆分此 字符串，最多不超过"),a("code",[t._v("limit")]),t._v("个，如果超过了，剩下的全部都放到最后一个元素中。")])])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12hello34world5java7891mysql456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把字符串中的数字替换成,，如果结果中开头和结尾有，的话去掉")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\d+"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^,|,$"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12345"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断str字符串中是否全部有数字组成，即有1-n个数字组成")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" matches "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\d+"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" tel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0571-4534289"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断这是否是一个杭州的固定电话")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0571-\\\\d{7,8}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12345"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断str字符串中是否全部有数字组成，即有1-n个数字组成")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" matches "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\d+"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" tel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0571-4534289"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断这是否是一个杭州的固定电话")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0571-\\\\d{7,8}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"三、string类与其他结构之间的转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、string类与其他结构之间的转换"}},[t._v("#")]),t._v(" 三、String类与其他结构之间的转换")]),t._v(" "),a("h3",{attrs:{id:"_1、string-与基本数据类型、包装类之间的转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、string-与基本数据类型、包装类之间的转换"}},[t._v("#")]),t._v(" 1、String 与基本数据类型、包装类之间的转换")]),t._v(" "),a("p",[a("strong",[t._v("String → 基本数据类型、包装类：")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Integer")]),t._v("包装类的"),a("code",[t._v("public static int parseInt(String s)")]),t._v("：可以将由“数字”字 符组成的字符串转换为整型")]),t._v(" "),a("li",[t._v("类似地,使用"),a("code",[t._v("java.lang")]),t._v("包中的"),a("code",[t._v("Byte")]),t._v("、"),a("code",[t._v("Short")]),t._v("、"),a("code",[t._v("Long")]),t._v("、"),a("code",[t._v("Float")]),t._v("、"),a("code",[t._v("Double")]),t._v("类调相应 的类方法可以将由“数字”字符组成的字符串，转化为相应的基本数据类型")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stirng")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("基本数据类型、包装类 → String：")])]),t._v(" "),a("ul",[a("li",[t._v("调用String类的public String valueOf(int n)可将int型转换为字符串")]),t._v(" "),a("li",[t._v("相应的valueOf(byte b)、valueOf(long l)、valueOf(float f)、valueOf(double  d)、valueOf(boolean b)可由参数的相应类型到字符串的转换")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两种方式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2、string-与-char-之间的转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、string-与-char-之间的转换"}},[t._v("#")]),t._v(" 2、String 与 char[] 之间的转换")]),t._v(" "),a("p",[a("strong",[t._v("String → char[]：")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("public char[] toCharArray()")]),t._v("：将字符串中的全部字符存放在一个字符数组中的方法")]),t._v(" "),a("li",[a("code",[t._v("public void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)")]),t._v("：提供了将指定索引范围内的字符串存放到数组中的方法")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" charArray "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toCharArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("char[] → String：")])]),t._v(" "),a("ul",[a("li",[t._v("String 类的构造器："),a("code",[t._v("String(char[])")]),t._v("和 "),a("code",[t._v("String(char[]，int offset，int length)")]),t._v("分别用字符数组中的全部字符和部分字符创建字符串对象。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'l'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'l'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'o'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"_3、string-与-byte-之间的转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、string-与-byte-之间的转换"}},[t._v("#")]),t._v(" 3、String 与 byte[] 之间的转换")]),t._v(" "),a("ul",[a("li",[t._v("编码：字符串 → 字节")]),t._v(" "),a("li",[t._v("解码：编码的逆过程")]),t._v(" "),a("li",[a("strong",[t._v("说明：")]),t._v(" 解码时，要求解码使用的字符集必须与编码时使用的字符集一致，否则会出现乱码")])]),t._v(" "),a("p",[a("strong",[t._v("String → byte[]：")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("public byte[] getBytes()")]),t._v(" ：使用平台的默认字符集将此 "),a("code",[t._v("String")]),t._v(" 编码为 "),a("code",[t._v("byte")]),t._v(" 序列，并将结果存储到一个新的 "),a("code",[t._v("byte")]),t._v(" 数组中")]),t._v(" "),a("li",[a("code",[t._v("public byte[] getBytes(String charsetName)")]),t._v("：使用指定的字符集将 此 "),a("code",[t._v("String")]),t._v(" 编码到 "),a("code",[t._v("byte")]),t._v(" 序列，并将结果存储到新的 byte 数组。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc123中国"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [97,98,99,49,50,51,-28,-72,-83,-27,-101,-67] 使用默认的字符集进行转换")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" gbks "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gbk"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [97,98,99,49,50,51,-42,-48,-71,-6]使用默认的字符集，进行转换")]),t._v("\n")])])]),a("p",[a("strong",[t._v("byte[] → String：")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("String(byte[])")]),t._v("：通过使用平台的默认字符集解码指定的 "),a("code",[t._v("byte")]),t._v(" 数组，构造一个新的 "),a("code",[t._v("String")])]),t._v(" "),a("li",[a("code",[t._v("String(byte[]，int offset，int length)")]),t._v("：用指定的字节数组的一部分，即从数组起始位置 "),a("code",[t._v("offset")]),t._v(" 开始取 "),a("code",[t._v("length")]),t._v(" 个字节构造一个字符串对象。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用默认的字符集，进行解码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gbks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gbk"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"四、stringbuffer-和-stringbuilder的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、stringbuffer-和-stringbuilder的使用"}},[t._v("#")]),t._v(" 四、StringBuffer 和 StringBuilder的使用")]),t._v(" "),a("h3",{attrs:{id:"_1、string、stringbuffer、stringbuilder三者的异同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、string、stringbuffer、stringbuilder三者的异同"}},[t._v("#")]),t._v(" 1、String、StringBuffer、StringBuilder三者的异同？")]),t._v(" "),a("p",[a("strong",[t._v("区别：")])]),t._v(" "),a("ul",[a("li",[t._v("String：不可变的字符序列")]),t._v(" "),a("li",[t._v("StringBuffer：可变的字符序列；线程安全的，效率偏低")]),t._v(" "),a("li",[t._v("StringBuilder：可变的字符序列；JDK5.0新增，线程不安全的，效率高")])]),t._v(" "),a("p",[a("strong",[t._v("相同点：")])]),t._v(" "),a("ul",[a("li",[t._v("底层都用char[] 存储")])]),t._v(" "),a("p",[a("strong",[t._v("源码分析：")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// char[] value = new char[0];")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// char[] value = new char[]{'a','b','c'};")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// char[] value = new char[16]; 底层创建了一个长度是16的数组")]),t._v("\nsb1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// value[0] = 'a';")]),t._v("\nsb1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// value[1] = 'b';")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// char[] value = new char["abc".length() + 16]; ')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 问题1：System.out.println(sb2.length()); // 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 问题2：扩容问题：如果要添加的数据底层数组盛不下了，那就需要 扩容底层数组")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认情况下，扩容为原来容量的2倍+2，同时将原有数组中的元素复制到新的数组中")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指导意义：开发中建议使用：StringBUffer(int capacity) 或 StringBUilder(int capacity)指定一开始底层数组的长度")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2、stringbuffer类的常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、stringbuffer类的常用方法"}},[t._v("#")]),t._v(" 2、StringBuffer类的常用方法")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("StringBuffer append(xxx)：")]),t._v(" 提供了很多的"),a("code",[t._v("append()")]),t._v("方法，用于进行字符串拼接")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("StringBuffer delete(int start,int end)：")]),t._v(" 删除指定位置的内容")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("StringBuffer replace(int start, int end, String str)：")]),t._v(" 把"),a("code",[t._v("[start,end)")]),t._v("位置替换为"),a("code",[t._v("str")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("StringBuffer insert(int offset, xxx)：")]),t._v(" 在指定位置插入xxx")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("StringBuffer reverse() ：")]),t._v(" 把当前字符序列逆")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("public int indexOf(String str) ：")]),t._v(" 返回"),a("code",[t._v("str")]),t._v("的起始位置")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("public String substring(int start,int end) ：")]),t._v(" 返回一个从"),a("code",[t._v("start")]),t._v("开始到"),a("code",[t._v("end")]),t._v("结束的左闭右开区间的子串")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("public int length() ：")]),t._v(" 返回长度")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("public char charAt(int n ) ：")]),t._v(" 返回索引"),a("code",[t._v("n")]),t._v("的字符")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("public void setCharAt(int n ,char ch)：")]),t._v(" 把索引"),a("code",[t._v("n")]),t._v("的字符改成"),a("code",[t._v("ch")])])])]),t._v(" "),a("p",[a("strong",[t._v("总结：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("增：append")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("append")]),t._v("和"),a("code",[t._v("insert")]),t._v("方法支持方法链操作")])]),t._v(" "),a("li",[a("p",[t._v("方法链的原理：")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://typora-img-1307960409.cos.ap-shanghai.myqcloud.com/img/image-20210420230814645.png",alt:"image-20210420230814645"}})])])]),t._v(" "),a("li",[a("p",[t._v("删："),a("code",[t._v("delete(int start,int end)")])])]),t._v(" "),a("li",[a("p",[t._v("改："),a("code",[t._v("setCharAt(int n ,char ch) / replace(int start, int end, String str)")])])]),t._v(" "),a("li",[a("p",[t._v("查："),a("code",[t._v("charAt(int n )")])])]),t._v(" "),a("li",[a("p",[t._v("插："),a("code",[t._v("insert(int offset, xxx)")])])]),t._v(" "),a("li",[a("p",[t._v("长度："),a("code",[t._v("length()")])])]),t._v(" "),a("li",[a("p",[t._v("遍历："),a("code",[t._v("for + charAt() 、toString()")])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);